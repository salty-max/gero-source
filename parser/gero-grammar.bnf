// ----------------------------------------
// Lexical grammer (tokens):

%lex

%%

\s+                                 /* skip whitespaces */

\"[^\"]*\"                          return 'STRING'
[+-]?([0-9]*[.])?[0-9]+             return 'NUMBER'
[\w\-+*=<>/%]+                       return 'SYMBOL'

/lex

// ----------------------------------------
// Syntactic grammer (BNF):
%%

Exp
  : Atom
  | List
  ;

Atom
  : NUMBER { $$ = Number($1) }
  | STRING
  | SYMBOL
  ;

List
  : '(' ListEntries ')' { $$ = $2 }
  ;

ListEntries
  : ListEntries Exp { $1.push($2); $$ = $1 }
  | /* empty  */ { $$ = [] }
  ;